<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:resources="clr-namespace:Listen2MeRefined.WPF"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF">

    <Style TargetType="Window" x:Key="BasicWindow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily}" />
    </Style>

    <Style TargetType="ListView" x:Key="VirtualizedListView" BasedOn="{StaticResource {x:Type ListView}}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        VirtualizingPanel.ScrollUnit="Item"
                        VirtualizingPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListView" x:Key="SongsListView" BasedOn="{StaticResource VirtualizedListView}">
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListView" x:Key="CustomHighlightSongsListView" BasedOn="{StaticResource SongsListView}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border 
                                    x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="10 0 10 0"
                                    CornerRadius="2">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource ThirnaryDarkBrush}"/>
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThirnaryLightMidBrush}"/>
                                        <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource ThirnaryMidBrush}"/>
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThirnaryLightMidBrush}"/>
                                        <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGrid" x:Key="SearchResultGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserDeleteRows" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ThirnaryDarkBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ThirnaryLightMidBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource ThirnaryMidBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ThirnaryLightMidBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ThirnaryMidBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ThirnaryLightMidBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="CustomComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderBrush" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="materialDesign:HintAssist.Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        VirtualizingPanel.ScrollUnit="Item"
                        VirtualizingPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="ContainerBorder">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContainerGradientBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    
    <!--#region Element Container -->
    <Style TargetType="TextBlock" x:Key="ElementContainerText" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="3 0" />
        <Setter Property="Margin" Value="0 2 0 0" />
        <Setter Property="FontSize" Value="24" />
    </Style>
    <!--#endregion-->
    
    <!--#region  Buttons-->
    <Style TargetType="Button" x:Key="InteractionButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="31" />
        <Setter Property="Width" Value="31" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ThirnaryMidBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ThirnaryDarkBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="TitleBarButton" BasedOn="{StaticResource InteractionButton}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 1 0 0" />
    </Style>
    <Style TargetType="Button" x:Key="WindowCloseButton" BasedOn="{StaticResource TitleBarButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#970000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#6f0000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="PlayerButton" BasedOn="{StaticResource InteractionButton}">
        <Setter Property="Width" Value="40" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <!--#endregion-->

    <!--#region No Halo Slider Style-->
    <!-- This style is needed as it is to remove the halo from the slider (and maybe to add my own style later) -->
    <Style x:Key="MaterialDesignRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="MaterialDesignSliderThumb" TargetType="{x:Type Thumb}">
        <Grid x:Name="thumbGrid" Height="20" Width="0">
            <AdornerDecorator>
                <AdornerDecorator.CacheMode>
                    <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </AdornerDecorator.CacheMode>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="MaterialDesignSliderHorizontal" TargetType="{x:Type resources:WaveSlider}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" UseLayoutRounding="True">
            <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Visibility="Collapsed" />
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Visibility="Collapsed" />

                <skia:SKElement
                    x:Name="remaining" 
                    Height="67" 
                    Opacity=".38" 
                    VerticalAlignment="Center"
                    resources:SkiaElementHelper.Bitmap="{TemplateBinding WaveBitmap}"/>
                <skia:SKElement
                    x:Name="activeTrack" 
                    Height="67"
                    Width="{Binding DecreaseRepeatButton.ActualWidth, ElementName=PART_Track}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    resources:SkiaElementHelper.Bitmap="{TemplateBinding WaveBitmap}"/>
                
                <Canvas Height="67" VerticalAlignment="Center">
                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="100" Visibility="Collapsed" />
                </Canvas>
                <Track x:Name="PART_Track" Height="67">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static resources:WaveSlider.DecreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static resources:WaveSlider.IncreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Template="{StaticResource MaterialDesignSliderThumb}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="NoHaloSlider" TargetType="{x:Type resources:WaveSlider}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="IsMoveToPointEnabled" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template" Value="{StaticResource MaterialDesignSliderHorizontal}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="wpf:SliderAssist.OnlyShowFocusVisualWhileDragging" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource MaterialDesignSliderVertical}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <Style TargetType="{x:Type Thumb}" x:Key="ScrollBarThumbStyle">
        <Setter Property="Background" Value="#555"/>
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style 
        TargetType="{x:Type ScrollBar}" 
        BasedOn="{StaticResource {x:Type ScrollBar}}"
        x:Key="{x:Type ScrollBar}">
        <Setter Property="Background" Value="#333" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border 
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"/>
                        <Track 
                            Grid.Row="1"
                            IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">

                                <Track x:Name="PART_Track" IsDirectionReversed="True">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="#555" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Horizontal ScrollBar -->
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                </Grid.ColumnDefinitions>

                                <Track x:Name="PART_Track">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="#555" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Thumb" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
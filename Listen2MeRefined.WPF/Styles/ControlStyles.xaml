<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:resources="clr-namespace:Listen2MeRefined.WPF"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF">

    <Style TargetType="Window" x:Key="BasicWindow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily}" />
    </Style>

    <Style TargetType="ListView" x:Key="VirtualizedListView" BasedOn="{StaticResource {x:Type ListView}}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        VirtualizingPanel.ScrollUnit="Item"
                        VirtualizingPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListView" x:Key="SongsListView" BasedOn="{StaticResource VirtualizedListView}">
        <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid
                        MinWidth="320"
                        ToolTip="{Binding Display}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Rectangle
                            Grid.RowSpan="2"
                            Fill="Transparent" />

                        <resources:HorizontalSeparator
                            Grid.Row="1"
                            VerticalAlignment="Bottom" />

                        <TextBlock
                            Grid.Row="0"
                            Text="{Binding Display, FallbackValue=Track}"
                            FontSize="16"
                            TextTrimming="CharacterEllipsis"
                            HorizontalAlignment="Center"
                            FontWeight="Bold" />

                        <Grid
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Margin="0 0 0 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Text="{Binding BPM, FallbackValue=BPM, StringFormat={}{0} BPM}"
                                TextTrimming="CharacterEllipsis"
                                HorizontalAlignment="Center" />
                            <TextBlock
                                Grid.Column="1"
                                Text="{Binding Bitrate, FallbackValue=Bitrate, StringFormat={}{0} Kbps}"
                                TextTrimming="CharacterEllipsis"
                                HorizontalAlignment="Center" />
                            <TextBlock
                                Grid.Column="2"
                                Text="{Binding Length, StringFormat={}{0:hh\\:mm\\:ss\\.f}, FallbackValue=Length}"
                                TextTrimming="CharacterEllipsis"
                                HorizontalAlignment="Center" />
                            <TextBlock
                                Grid.Column="3"
                                Text="{Binding Genre, FallbackValue=Genre}"
                                TextTrimming="CharacterEllipsis"
                                HorizontalAlignment="Center" />
                        </Grid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="CustomComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        VirtualizingPanel.ScrollUnit="Item"
                        VirtualizingPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region  Buttons-->
    <Style TargetType="Button" x:Key="InteractionButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="31" />
        <Setter Property="Width" Value="31" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThirnaryBrush}" />
        <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ThirnaryMidBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ThirnaryDarkBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="TitleBarButton" BasedOn="{StaticResource InteractionButton}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 1 0 0" />
    </Style>
    <Style TargetType="Button" x:Key="WindowCloseButton" BasedOn="{StaticResource TitleBarButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#970000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#6f0000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="PlayerButton" BasedOn="{StaticResource InteractionButton}">
        <Setter Property="Width" Value="40" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <!--#endregion-->

    <!--#region No Halo Slider Style-->
    <!-- This style is needed as it is to remove the halo from the slider (and maybe to add my own style later) -->
    <Style x:Key="MaterialDesignRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="MaterialDesignSliderThumb" TargetType="{x:Type Thumb}">
        <Grid x:Name="thumbGrid" Height="20" Width="0">
            <AdornerDecorator>
                <AdornerDecorator.CacheMode>
                    <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </AdornerDecorator.CacheMode>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="MaterialDesignSliderHorizontal" TargetType="{x:Type resources:WaveSlider}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" UseLayoutRounding="True">
            <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Visibility="Collapsed" />
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Visibility="Collapsed" />

                <skia:SKElement
                    x:Name="remaining" 
                    Height="67" 
                    Opacity=".38" 
                    VerticalAlignment="Center"
                    resources:SkiaElementHelper.Bitmap="{TemplateBinding WaveBitmap}"/>
                <skia:SKElement
                    x:Name="activeTrack" 
                    Height="67"
                    Width="{Binding DecreaseRepeatButton.ActualWidth, ElementName=PART_Track}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    resources:SkiaElementHelper.Bitmap="{TemplateBinding WaveBitmap}"/>
                
                <Canvas Height="67" VerticalAlignment="Center">
                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="100" Visibility="Collapsed" />
                </Canvas>
                <Track x:Name="PART_Track" Height="67">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static resources:WaveSlider.DecreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static resources:WaveSlider.IncreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Template="{StaticResource MaterialDesignSliderThumb}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="NoHaloSlider" TargetType="{x:Type resources:WaveSlider}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="IsMoveToPointEnabled" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template" Value="{StaticResource MaterialDesignSliderHorizontal}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20 5 10 5" />
        <Setter Property="wpf:SliderAssist.OnlyShowFocusVisualWhileDragging" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource MaterialDesignSliderVertical}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>